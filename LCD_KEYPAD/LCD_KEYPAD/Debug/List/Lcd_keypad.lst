
AVRASM ver. 2.1.30  C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm Thu Dec 21 15:41:29 2023

C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm(1418): warning: Register r4 already defined by the .DEF directive
C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm(1419): warning: Register r5 already defined by the .DEF directive
C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm(1420): warning: Register r6 already defined by the .DEF directive
C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm(1421): warning: Register r7 already defined by the .DEF directive
C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm(1422): warning: Register r8 already defined by the .DEF directive
C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm(1423): warning: Register r9 already defined by the .DEF directive
C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm(1424): warning: Register r10 already defined by the .DEF directive
C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm(1425): warning: Register r11 already defined by the .DEF directive
C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm(1426): warning: Register r13 already defined by the .DEF directive
C:\Users\m\Documents\level4_sem1\embeded\LCD_KEYPAD\Debug\List\Lcd_keypad.asm(1427): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V4.00a 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cnt=R4
                 	.DEF _cnt_msb=R5
                 	.DEF _y=R6
                 	.DEF _y_msb=R7
                 	.DEF _i=R8
                 	.DEF _i_msb=R9
                 	.DEF _cpy=R10
                 	.DEF _cpy_msb=R11
                 	.DEF __lcd_x=R13
                 	.DEF __lcd_y=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0047 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000
000034 0000      	.DB  0x0,0x0,0x0,0x0
000035 0000
000036 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x0:
000037 6548
000038 6c6c
000039 216f
00003a 2500      	.DB  0x48,0x65,0x6C,0x6C,0x6F,0x21,0x0,0x25
00003b 0064      	.DB  0x64,0x0
                 _0x2000003:
00003c c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003d 0008      	.DW  0x08
00003e 0004      	.DW  0x04
00003f 0066      	.DW  __REG_VARS*2
                 
000040 0007      	.DW  0x07
000041 0160      	.DW  _0x6
000042 006e      	.DW  _0x0*2
                 
000043 0002      	.DW  0x02
000044 0167      	.DW  __base_y_G100
000045 0078      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000046 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000047 94f8      	CLI
                 
000048 27ee      	CLR  R30
000049 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004a e0f1      	LDI  R31,1
00004b bffb      	OUT  GICR,R31
00004c bfeb      	OUT  GICR,R30
00004d bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004e e08d      	LDI  R24,(14-2)+1
00004f e0a2      	LDI  R26,2
000050 27bb      	CLR  R27
                 __CLEAR_REG:
000051 93ed      	ST   X+,R30
000052 958a      	DEC  R24
000053 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000054 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000055 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000056 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000057 93ed      	ST   X+,R30
000058 9701      	SBIW R24,1
000059 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005a e7ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00005b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005c 9185      	LPM  R24,Z+
00005d 9195      	LPM  R25,Z+
00005e 9700      	SBIW R24,0
00005f f061      	BREQ __GLOBAL_INI_END
000060 91a5      	LPM  R26,Z+
000061 91b5      	LPM  R27,Z+
000062 9005      	LPM  R0,Z+
000063 9015      	LPM  R1,Z+
000064 01bf      	MOVW R22,R30
000065 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000066 9005      	LPM  R0,Z+
000067 920d      	ST   X+,R0
000068 9701      	SBIW R24,1
000069 f7e1      	BRNE __GLOBAL_INI_LOOP
00006a 01fb      	MOVW R30,R22
00006b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006d bfed      	OUT  SPL,R30
00006e e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000070 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000071 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000072 940c 0074 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;char keypad();
                 ;void main(void)
                 ; 0000 0012 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0013 int x1 = 0;
                 ; 0000 0014 DDRC = 0b00000111;  // Configure the lower 3 bits of PORTC as outputs for the keypad
                 ;	x1 -> R16,R17
                +
000074 e000     +LDI R16 , LOW ( 0 )
000075 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000076 e0e7      	LDI  R30,LOW(7)
000077 bbe4      	OUT  0x14,R30
                 ; 0000 0015 PORTC = 0b11111000; // Enable pull-up resistors for the upper 5 bits of PORTC
000078 efe8      	LDI  R30,LOW(248)
000079 bbe5      	OUT  0x15,R30
                 ; 0000 0016 lcd_init(16);       // Initialize the LCD with 16 columns
00007a e1a0      	LDI  R26,LOW(16)
00007b d119      	RCALL _lcd_init
                 ; 0000 0017 
                 ; 0000 0018 while (1)
                 ; 0000 0019 {
                 ; 0000 001A lcd_puts("Hello!");
                +
00007c e6a0     +LDI R26 , LOW ( _0x6 + ( 0 ) )
00007d e0b1     +LDI R27 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW2MN _0x6,0
00007e d107      	RCALL _lcd_puts
                 ; 0000 001B delay_ms(300);
00007f e2ac      	LDI  R26,LOW(300)
000080 e0b1      	LDI  R27,HIGH(300)
000081 d2f8      	RCALL _delay_ms
                 ; 0000 001C lcd_clear();
000082 d0e3      	RCALL _lcd_clear
                 ; 0000 001D 
                 ; 0000 001E while (1)
                 _0x7:
                 ; 0000 001F {
                 ; 0000 0020 x1 = keypad();
000083 d050      	RCALL _keypad
000084 2f0e      	MOV  R16,R30
000085 2711      	CLR  R17
                 ; 0000 0021 lcd_gotoxy(i, y);
000086 928a      	ST   -Y,R8
000087 2da6      	MOV  R26,R6
000088 d0cb      	RCALL _lcd_gotoxy
                 ; 0000 0022 lcd_printf("%d", x1);
                +
000089 e7e5     +LDI R30 , LOW ( 2 * _0x0 + ( 7 ) )
00008a e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 7 ) )
                 	__POINTW1FN _0x0,7
00008b 93fa      	ST   -Y,R31
00008c 93ea      	ST   -Y,R30
00008d 01f8      	MOVW R30,R16
                +
00008e 2f6f     +MOV R22 , R31
00008f 0f66     +ADD R22 , R22
000090 0b66     +SBC R22 , R22
000091 2f76     +MOV R23 , R22
                 	__CWD1
000092 d2e2      	RCALL __PUTPARD1
000093 e084      	LDI  R24,4
000094 d262      	RCALL _lcd_printf
000095 9626      	ADIW R28,6
                 ; 0000 0023 if(x1 == 10 || x1 == 11)
000096 e0ea      	LDI  R30,LOW(10)
000097 e0f0      	LDI  R31,HIGH(10)
000098 17e0      	CP   R30,R16
000099 07f1      	CPC  R31,R17
00009a f029      	BREQ _0xB
00009b e0eb      	LDI  R30,LOW(11)
00009c e0f0      	LDI  R31,HIGH(11)
00009d 17e0      	CP   R30,R16
00009e 07f1      	CPC  R31,R17
00009f f419      	BRNE _0xA
                 _0xB:
                 ; 0000 0024 i = i + 1;
0000a0 01f4      	MOVW R30,R8
0000a1 9631      	ADIW R30,1
0000a2 014f      	MOVW R8,R30
                 ; 0000 0025 i = i + 1;
                 _0xA:
0000a3 01f4      	MOVW R30,R8
0000a4 9631      	ADIW R30,1
0000a5 014f      	MOVW R8,R30
                 ; 0000 0026 
                 ; 0000 0027 if (i == 16 || i == 17)
0000a6 e1e0      	LDI  R30,LOW(16)
0000a7 e0f0      	LDI  R31,HIGH(16)
0000a8 15e8      	CP   R30,R8
0000a9 05f9      	CPC  R31,R9
0000aa f029      	BREQ _0xE
0000ab e1e1      	LDI  R30,LOW(17)
0000ac e0f0      	LDI  R31,HIGH(17)
0000ad 15e8      	CP   R30,R8
0000ae 05f9      	CPC  R31,R9
0000af f499      	BRNE _0xD
                 _0xE:
                 ; 0000 0028 {
                 ; 0000 0029 cpy = i;
0000b0 0154      	MOVW R10,R8
                 ; 0000 002A i = 0;
0000b1 2488      	CLR  R8
0000b2 2499      	CLR  R9
                 ; 0000 002B if(cpy == 17)
0000b3 e1e1      	LDI  R30,LOW(17)
0000b4 e0f0      	LDI  R31,HIGH(17)
0000b5 15ea      	CP   R30,R10
0000b6 05fb      	CPC  R31,R11
0000b7 f429      	BRNE _0x10
                 ; 0000 002C {
                 ; 0000 002D i = i + 1;
0000b8 01f4      	MOVW R30,R8
0000b9 9631      	ADIW R30,1
0000ba 014f      	MOVW R8,R30
                 ; 0000 002E cpy = 0;
0000bb 24aa      	CLR  R10
0000bc 24bb      	CLR  R11
                 ; 0000 002F }
                 ; 0000 0030 y = 1;
                 _0x10:
0000bd e0e1      	LDI  R30,LOW(1)
0000be e0f0      	LDI  R31,HIGH(1)
0000bf 013f      	MOVW R6,R30
                 ; 0000 0031 cnt = cnt + 1;
0000c0 01f2      	MOVW R30,R4
0000c1 9631      	ADIW R30,1
0000c2 012f      	MOVW R4,R30
                 ; 0000 0032 }
                 ; 0000 0033 
                 ; 0000 0034 if (cnt == 2)
                 _0xD:
0000c3 e0e2      	LDI  R30,LOW(2)
0000c4 e0f0      	LDI  R31,HIGH(2)
0000c5 15e4      	CP   R30,R4
0000c6 05f5      	CPC  R31,R5
0000c7 f451      	BRNE _0x11
                 ; 0000 0035 {
                 ; 0000 0036 i = 0;
0000c8 2488      	CLR  R8
0000c9 2499      	CLR  R9
                 ; 0000 0037 y = 0;
0000ca 2466      	CLR  R6
0000cb 2477      	CLR  R7
                 ; 0000 0038 cnt = 0;
0000cc 2444      	CLR  R4
0000cd 2455      	CLR  R5
                 ; 0000 0039 delay_ms(200);
0000ce eca8      	LDI  R26,LOW(200)
0000cf e0b0      	LDI  R27,0
0000d0 d2a9      	RCALL _delay_ms
                 ; 0000 003A lcd_clear();
0000d1 d094      	RCALL _lcd_clear
                 ; 0000 003B }
                 ; 0000 003C }
                 _0x11:
0000d2 cfb0      	RJMP _0x7
                 ; 0000 003D 
                 ; 0000 003E lcd_clear();
                 ; 0000 003F }
                 ; 0000 0040 }
                 _0x12:
0000d3 cfff      	RJMP _0x12
                 ; .FEND
                 
                 	.DSEG
                 _0x6:
000160           	.BYTE 0x7
                 ;char keypad()
                 ; 0000 0044 {
                 
                 	.CSEG
                 _keypad:
                 ; .FSTART _keypad
                 ; 0000 0045 while (1)
                 _0x13:
                 ; 0000 0046 {
                 ; 0000 0047 PORTC.0 = 0;
0000d4 98a8      	CBI  0x15,0
                 ; 0000 0048 PORTC.1 = 1;
0000d5 9aa9      	SBI  0x15,1
                 ; 0000 0049 PORTC.2 = 1;
0000d6 9aaa      	SBI  0x15,2
                 ; 0000 004A // Only C1 is activated
                 ; 0000 004B switch (PINC)
0000d7 b3e3      	IN   R30,0x13
                 ; 0000 004C {
                 ; 0000 004D case 0b11110110:
0000d8 3fe6      	CPI  R30,LOW(0xF6)
0000d9 f429      	BRNE _0x1F
                 ; 0000 004E while (PINC.3 == 0);
                 _0x20:
0000da 9b9b      	SBIS 0x13,3
0000db cffe      	RJMP _0x20
                 ; 0000 004F return 1;
0000dc e0e1      	LDI  R30,LOW(1)
0000dd 9508      	RET
                 ; 0000 0050 break;
0000de c014      	RJMP _0x1E
                 ; 0000 0051 
                 ; 0000 0052 case 0b11101110:
                 _0x1F:
0000df 3eee      	CPI  R30,LOW(0xEE)
0000e0 f429      	BRNE _0x23
                 ; 0000 0053 while (PINC.4 == 0);
                 _0x24:
0000e1 9b9c      	SBIS 0x13,4
0000e2 cffe      	RJMP _0x24
                 ; 0000 0054 return 4;
0000e3 e0e4      	LDI  R30,LOW(4)
0000e4 9508      	RET
                 ; 0000 0055 break;
0000e5 c00d      	RJMP _0x1E
                 ; 0000 0056 
                 ; 0000 0057 case 0b11011110:
                 _0x23:
0000e6 3dee      	CPI  R30,LOW(0xDE)
0000e7 f429      	BRNE _0x27
                 ; 0000 0058 while (PINC.5 == 0);
                 _0x28:
0000e8 9b9d      	SBIS 0x13,5
0000e9 cffe      	RJMP _0x28
                 ; 0000 0059 return 7;
0000ea e0e7      	LDI  R30,LOW(7)
0000eb 9508      	RET
                 ; 0000 005A break;
0000ec c006      	RJMP _0x1E
                 ; 0000 005B 
                 ; 0000 005C case 0b10111110:
                 _0x27:
0000ed 3bee      	CPI  R30,LOW(0xBE)
0000ee f421      	BRNE _0x1E
                 ; 0000 005D while (PINC.6 == 0);
                 _0x2C:
0000ef 9b9e      	SBIS 0x13,6
0000f0 cffe      	RJMP _0x2C
                 ; 0000 005E return 10;
0000f1 e0ea      	LDI  R30,LOW(10)
0000f2 9508      	RET
                 ; 0000 005F break;
                 ; 0000 0060 }
                 _0x1E:
                 ; 0000 0061 
                 ; 0000 0062 PORTC.0 = 1;
0000f3 9aa8      	SBI  0x15,0
                 ; 0000 0063 PORTC.1 = 0;
0000f4 98a9      	CBI  0x15,1
                 ; 0000 0064 PORTC.2 = 1;
0000f5 9aaa      	SBI  0x15,2
                 ; 0000 0065 // Only C2 is activated
                 ; 0000 0066 switch (PINC)
0000f6 b3e3      	IN   R30,0x13
                 ; 0000 0067 {
                 ; 0000 0068 case 0b11110101:
0000f7 3fe5      	CPI  R30,LOW(0xF5)
0000f8 f429      	BRNE _0x38
                 ; 0000 0069 while (PINC.3 == 0);
                 _0x39:
0000f9 9b9b      	SBIS 0x13,3
0000fa cffe      	RJMP _0x39
                 ; 0000 006A return 2;
0000fb e0e2      	LDI  R30,LOW(2)
0000fc 9508      	RET
                 ; 0000 006B break;
0000fd c014      	RJMP _0x37
                 ; 0000 006C 
                 ; 0000 006D case 0b11101101:
                 _0x38:
0000fe 3eed      	CPI  R30,LOW(0xED)
0000ff f429      	BRNE _0x3C
                 ; 0000 006E while (PINC.4 == 0);
                 _0x3D:
000100 9b9c      	SBIS 0x13,4
000101 cffe      	RJMP _0x3D
                 ; 0000 006F return 5;
000102 e0e5      	LDI  R30,LOW(5)
000103 9508      	RET
                 ; 0000 0070 break;
000104 c00d      	RJMP _0x37
                 ; 0000 0071 
                 ; 0000 0072 case 0b11011101:
                 _0x3C:
000105 3ded      	CPI  R30,LOW(0xDD)
000106 f429      	BRNE _0x40
                 ; 0000 0073 while (PINC.5 == 0);
                 _0x41:
000107 9b9d      	SBIS 0x13,5
000108 cffe      	RJMP _0x41
                 ; 0000 0074 return 8;
000109 e0e8      	LDI  R30,LOW(8)
00010a 9508      	RET
                 ; 0000 0075 break;
00010b c006      	RJMP _0x37
                 ; 0000 0076 
                 ; 0000 0077 case 0b10111101:
                 _0x40:
00010c 3bed      	CPI  R30,LOW(0xBD)
00010d f421      	BRNE _0x37
                 ; 0000 0078 while (PINC.6 == 0);
                 _0x45:
00010e 9b9e      	SBIS 0x13,6
00010f cffe      	RJMP _0x45
                 ; 0000 0079 return 0;
000110 e0e0      	LDI  R30,LOW(0)
000111 9508      	RET
                 ; 0000 007A break;
                 ; 0000 007B }
                 _0x37:
                 ; 0000 007C 
                 ; 0000 007D PORTC.0 = 1;
000112 9aa8      	SBI  0x15,0
                 ; 0000 007E PORTC.1 = 1;
000113 9aa9      	SBI  0x15,1
                 ; 0000 007F PORTC.2 = 0;
000114 98aa      	CBI  0x15,2
                 ; 0000 0080 // Only C3 is activated
                 ; 0000 0081 switch (PINC)
000115 b3e3      	IN   R30,0x13
                 ; 0000 0082 {
                 ; 0000 0083 case 0b11110011:
000116 3fe3      	CPI  R30,LOW(0xF3)
000117 f429      	BRNE _0x51
                 ; 0000 0084 while (PINC.3 == 0);
                 _0x52:
000118 9b9b      	SBIS 0x13,3
000119 cffe      	RJMP _0x52
                 ; 0000 0085 return 3;
00011a e0e3      	LDI  R30,LOW(3)
00011b 9508      	RET
                 ; 0000 0086 break;
00011c c014      	RJMP _0x50
                 ; 0000 0087 
                 ; 0000 0088 case 0b11101011:
                 _0x51:
00011d 3eeb      	CPI  R30,LOW(0xEB)
00011e f429      	BRNE _0x55
                 ; 0000 0089 while (PINC.4 == 0);
                 _0x56:
00011f 9b9c      	SBIS 0x13,4
000120 cffe      	RJMP _0x56
                 ; 0000 008A return 6;
000121 e0e6      	LDI  R30,LOW(6)
000122 9508      	RET
                 ; 0000 008B break;
000123 c00d      	RJMP _0x50
                 ; 0000 008C 
                 ; 0000 008D case 0b11011011:
                 _0x55:
000124 3deb      	CPI  R30,LOW(0xDB)
000125 f429      	BRNE _0x59
                 ; 0000 008E while (PINC.5 == 0);
                 _0x5A:
000126 9b9d      	SBIS 0x13,5
000127 cffe      	RJMP _0x5A
                 ; 0000 008F return 9;
000128 e0e9      	LDI  R30,LOW(9)
000129 9508      	RET
                 ; 0000 0090 break;
00012a c006      	RJMP _0x50
                 ; 0000 0091 
                 ; 0000 0092 case 0b10111011:
                 _0x59:
00012b 3beb      	CPI  R30,LOW(0xBB)
00012c f421      	BRNE _0x50
                 ; 0000 0093 while (PINC.6 == 0);
                 _0x5E:
00012d 9b9e      	SBIS 0x13,6
00012e cffe      	RJMP _0x5E
                 ; 0000 0094 return 11;
00012f e0eb      	LDI  R30,LOW(11)
000130 9508      	RET
                 ; 0000 0095 break;
                 ; 0000 0096 }
                 _0x50:
                 ; 0000 0097 }
000131 cfa2      	RJMP _0x13
                 ; 0000 0098 }
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000132 931a      	ST   -Y,R17
000133 2f1a      	MOV  R17,R26
000134 b3eb      	IN   R30,0x1B
000135 70ef      	ANDI R30,LOW(0xF)
000136 2fae      	MOV  R26,R30
000137 2fe1      	MOV  R30,R17
000138 7fe0      	ANDI R30,LOW(0xF0)
000139 2bea      	OR   R30,R26
00013a bbeb      	OUT  0x1B,R30
                +
00013b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00013c 958a     +DEC R24
00013d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00013e 9ada      	SBI  0x1B,2
                +
00013f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000140 958a     +DEC R24
000141 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000142 98da      	CBI  0x1B,2
                +
000143 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000144 958a     +DEC R24
000145 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000146 c078      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000147 93aa      	ST   -Y,R26
000148 81a8      	LD   R26,Y
000149 dfe8      	RCALL __lcd_write_nibble_G100
00014a 81e8          ld    r30,y
00014b 95e2          swap  r30
00014c 83e8          st    y,r30
00014d 81a8      	LD   R26,Y
00014e dfe3      	RCALL __lcd_write_nibble_G100
                +
00014f e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000150 958a     +DEC R24
000151 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000152 9621      	ADIW R28,1
000153 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000154 931a      	ST   -Y,R17
000155 930a      	ST   -Y,R16
000156 2f1a      	MOV  R17,R26
000157 810a      	LDD  R16,Y+2
000158 2fe1      	MOV  R30,R17
000159 e0f0      	LDI  R31,0
00015a 59e9      	SUBI R30,LOW(-__base_y_G100)
00015b 4ffe      	SBCI R31,HIGH(-__base_y_G100)
00015c 81e0      	LD   R30,Z
00015d 0fe0      	ADD  R30,R16
00015e 2fae      	MOV  R26,R30
00015f dfe7      	RCALL __lcd_write_data
000160 2ed0      	MOV  R13,R16
000161 2ec1      	MOV  R12,R17
000162 8119      	LDD  R17,Y+1
000163 8108      	LDD  R16,Y+0
000164 9623      	ADIW R28,3
000165 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000166 e0a2      	LDI  R26,LOW(2)
000167 d1cf      	RCALL SUBOPT_0x0
000168 e0ac      	LDI  R26,LOW(12)
000169 dfdd      	RCALL __lcd_write_data
00016a e0a1      	LDI  R26,LOW(1)
00016b d1cb      	RCALL SUBOPT_0x0
00016c e0e0      	LDI  R30,LOW(0)
00016d 2ece      	MOV  R12,R30
00016e 2ede      	MOV  R13,R30
00016f 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000170 931a      	ST   -Y,R17
000171 2f1a      	MOV  R17,R26
000172 301a      	CPI  R17,10
000173 f021      	BREQ _0x2000005
000174 91e0 016b 	LDS  R30,__lcd_maxx
000176 16de      	CP   R13,R30
000177 f040      	BRLO _0x2000004
                 _0x2000005:
000178 e0e0      	LDI  R30,LOW(0)
000179 93ea      	ST   -Y,R30
00017a 94c3      	INC  R12
00017b 2dac      	MOV  R26,R12
00017c dfd7      	RCALL _lcd_gotoxy
00017d 301a      	CPI  R17,10
00017e f409      	BRNE _0x2000007
00017f c03f      	RJMP _0x2080001
                 _0x2000007:
                 _0x2000004:
000180 94d3      	INC  R13
000181 9ad8      	SBI  0x1B,0
000182 2fa1      	MOV  R26,R17
000183 dfc3      	RCALL __lcd_write_data
000184 98d8      	CBI  0x1B,0
000185 c039      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000186 d1da      	RCALL __SAVELOCR4
000187 019d      	MOVW R18,R26
                 _0x2000008:
000188 01d9      	MOVW R26,R18
                +
000189 5f2f     +SUBI R18 , LOW ( - 1 )
00018a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00018b 91ec      	LD   R30,X
00018c 2f1e      	MOV  R17,R30
00018d 30e0      	CPI  R30,0
00018e f019      	BREQ _0x200000A
00018f 2fa1      	MOV  R26,R17
000190 dfdf      	RCALL _lcd_putchar
000191 cff6      	RJMP _0x2000008
                 _0x200000A:
000192 d1d5      	RCALL __LOADLOCR4
000193 9624      	ADIW R28,4
000194 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000195 931a      	ST   -Y,R17
000196 2f1a      	MOV  R17,R26
000197 b3ea      	IN   R30,0x1A
000198 6fe0      	ORI  R30,LOW(0xF0)
000199 bbea      	OUT  0x1A,R30
00019a 9ad2      	SBI  0x1A,2
00019b 9ad0      	SBI  0x1A,0
00019c 9ad1      	SBI  0x1A,1
00019d 98da      	CBI  0x1B,2
00019e 98d8      	CBI  0x1B,0
00019f 98d9      	CBI  0x1B,1
0001a0 9310 016b 	STS  __lcd_maxx,R17
0001a2 2fe1      	MOV  R30,R17
0001a3 58e0      	SUBI R30,-LOW(128)
                +
0001a4 93e0 0169+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0001a6 2fe1      	MOV  R30,R17
0001a7 54e0      	SUBI R30,-LOW(192)
                +
0001a8 93e0 016a+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0001aa e1a4      	LDI  R26,LOW(20)
0001ab e0b0      	LDI  R27,0
0001ac d1cd      	RCALL _delay_ms
0001ad d18d      	RCALL SUBOPT_0x1
0001ae d18c      	RCALL SUBOPT_0x1
0001af d18b      	RCALL SUBOPT_0x1
0001b0 e2a0      	LDI  R26,LOW(32)
0001b1 df80      	RCALL __lcd_write_nibble_G100
                +
0001b2 ec88     +LDI R24 , LOW ( 200 )
0001b3 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0001b4 9701     +SBIW R24 , 1
0001b5 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0001b6 e2a8      	LDI  R26,LOW(40)
0001b7 df8f      	RCALL __lcd_write_data
0001b8 e0a4      	LDI  R26,LOW(4)
0001b9 df8d      	RCALL __lcd_write_data
0001ba e8a5      	LDI  R26,LOW(133)
0001bb df8b      	RCALL __lcd_write_data
0001bc e0a6      	LDI  R26,LOW(6)
0001bd df89      	RCALL __lcd_write_data
0001be dfa7      	RCALL _lcd_clear
                 _0x2080001:
0001bf 9119      	LD   R17,Y+
0001c0 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __print_G101:
                 ; .FSTART __print_G101
0001c1 93ba      	ST   -Y,R27
0001c2 93aa      	ST   -Y,R26
0001c3 9726      	SBIW R28,6
0001c4 d19a      	RCALL __SAVELOCR6
0001c5 e010      	LDI  R17,0
0001c6 85ac      	LDD  R26,Y+12
0001c7 85bd      	LDD  R27,Y+12+1
0001c8 e0e0      	LDI  R30,LOW(0)
0001c9 e0f0      	LDI  R31,HIGH(0)
0001ca 93ed      	ST   X+,R30
0001cb 93fc      	ST   X,R31
                 _0x2020016:
0001cc 89ea      	LDD  R30,Y+18
0001cd 89fb      	LDD  R31,Y+18+1
0001ce 9631      	ADIW R30,1
0001cf 8bea      	STD  Y+18,R30
0001d0 8bfb      	STD  Y+18+1,R31
0001d1 9731      	SBIW R30,1
0001d2 91e4      	LPM  R30,Z
0001d3 2f2e      	MOV  R18,R30
0001d4 30e0      	CPI  R30,0
0001d5 f409      	BRNE PC+2
0001d6 c10b      	RJMP _0x2020018
0001d7 2fe1      	MOV  R30,R17
0001d8 30e0      	CPI  R30,0
0001d9 f431      	BRNE _0x202001C
0001da 3225      	CPI  R18,37
0001db f411      	BRNE _0x202001D
0001dc e011      	LDI  R17,LOW(1)
0001dd c001      	RJMP _0x202001E
                 _0x202001D:
0001de d163      	RCALL SUBOPT_0x2
                 _0x202001E:
0001df c101      	RJMP _0x202001B
                 _0x202001C:
0001e0 30e1      	CPI  R30,LOW(0x1)
0001e1 f4a1      	BRNE _0x202001F
0001e2 3225      	CPI  R18,37
0001e3 f411      	BRNE _0x2020020
0001e4 d15d      	RCALL SUBOPT_0x2
0001e5 c0fa      	RJMP _0x20200CC
                 _0x2020020:
0001e6 e012      	LDI  R17,LOW(2)
0001e7 e040      	LDI  R20,LOW(0)
0001e8 e000      	LDI  R16,LOW(0)
0001e9 322d      	CPI  R18,45
0001ea f411      	BRNE _0x2020021
0001eb e001      	LDI  R16,LOW(1)
0001ec c0f4      	RJMP _0x202001B
                 _0x2020021:
0001ed 322b      	CPI  R18,43
0001ee f411      	BRNE _0x2020022
0001ef e24b      	LDI  R20,LOW(43)
0001f0 c0f0      	RJMP _0x202001B
                 _0x2020022:
0001f1 3220      	CPI  R18,32
0001f2 f411      	BRNE _0x2020023
0001f3 e240      	LDI  R20,LOW(32)
0001f4 c0ec      	RJMP _0x202001B
                 _0x2020023:
0001f5 c002      	RJMP _0x2020024
                 _0x202001F:
0001f6 30e2      	CPI  R30,LOW(0x2)
0001f7 f439      	BRNE _0x2020025
                 _0x2020024:
0001f8 e050      	LDI  R21,LOW(0)
0001f9 e013      	LDI  R17,LOW(3)
0001fa 3320      	CPI  R18,48
0001fb f411      	BRNE _0x2020026
0001fc 6800      	ORI  R16,LOW(128)
0001fd c0e3      	RJMP _0x202001B
                 _0x2020026:
0001fe c003      	RJMP _0x2020027
                 _0x2020025:
0001ff 30e3      	CPI  R30,LOW(0x3)
000200 f009      	BREQ PC+2
000201 c0df      	RJMP _0x202001B
                 _0x2020027:
000202 3320      	CPI  R18,48
000203 f010      	BRLO _0x202002A
000204 332a      	CPI  R18,58
000205 f008      	BRLO _0x202002B
                 _0x202002A:
000206 c007      	RJMP _0x2020029
                 _0x202002B:
000207 e0aa      	LDI  R26,LOW(10)
000208 9f5a      	MUL  R21,R26
000209 2d50      	MOV  R21,R0
00020a 2fe2      	MOV  R30,R18
00020b 53e0      	SUBI R30,LOW(48)
00020c 0f5e      	ADD  R21,R30
00020d c0d3      	RJMP _0x202001B
                 _0x2020029:
00020e 2fe2      	MOV  R30,R18
00020f 36e3      	CPI  R30,LOW(0x63)
000210 f439      	BRNE _0x202002F
000211 d137      	RCALL SUBOPT_0x3
000212 89e8      	LDD  R30,Y+16
000213 89f9      	LDD  R31,Y+16+1
000214 81a4      	LDD  R26,Z+4
000215 93aa      	ST   -Y,R26
000216 d138      	RCALL SUBOPT_0x4
000217 c0c8      	RJMP _0x2020030
                 _0x202002F:
000218 37e3      	CPI  R30,LOW(0x73)
000219 f429      	BRNE _0x2020032
00021a d12e      	RCALL SUBOPT_0x3
00021b d139      	RCALL SUBOPT_0x5
00021c d101      	RCALL _strlen
00021d 2f1e      	MOV  R17,R30
00021e c007      	RJMP _0x2020033
                 _0x2020032:
00021f 37e0      	CPI  R30,LOW(0x70)
000220 f449      	BRNE _0x2020035
000221 d127      	RCALL SUBOPT_0x3
000222 d132      	RCALL SUBOPT_0x5
000223 d106      	RCALL _strlenf
000224 2f1e      	MOV  R17,R30
000225 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000226 6002      	ORI  R16,LOW(2)
000227 770f      	ANDI R16,LOW(127)
000228 e030      	LDI  R19,LOW(0)
000229 c03a      	RJMP _0x2020036
                 _0x2020035:
00022a 36e4      	CPI  R30,LOW(0x64)
00022b f011      	BREQ _0x2020039
00022c 36e9      	CPI  R30,LOW(0x69)
00022d f411      	BRNE _0x202003A
                 _0x2020039:
00022e 6004      	ORI  R16,LOW(4)
00022f c002      	RJMP _0x202003B
                 _0x202003A:
000230 37e5      	CPI  R30,LOW(0x75)
000231 f431      	BRNE _0x202003C
                 _0x202003B:
000232 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000233 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000234 83ee      	STD  Y+6,R30
000235 83ff      	STD  Y+6+1,R31
000236 e015      	LDI  R17,LOW(5)
000237 c00c      	RJMP _0x202003D
                 _0x202003C:
000238 35e8      	CPI  R30,LOW(0x58)
000239 f411      	BRNE _0x202003F
00023a 6008      	ORI  R16,LOW(8)
00023b c003      	RJMP _0x2020040
                 _0x202003F:
00023c 37e8      	CPI  R30,LOW(0x78)
00023d f009      	BREQ PC+2
00023e c0a1      	RJMP _0x2020071
                 _0x2020040:
00023f e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000240 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000241 83ee      	STD  Y+6,R30
000242 83ff      	STD  Y+6+1,R31
000243 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000244 ff02      	SBRS R16,2
000245 c015      	RJMP _0x2020042
000246 d102      	RCALL SUBOPT_0x3
000247 89a8      	LDD  R26,Y+16
000248 89b9      	LDD  R27,Y+16+1
000249 9614      	ADIW R26,4
00024a 91ed      	LD   R30,X+
00024b 91fd      	LD   R31,X+
00024c 87ea      	STD  Y+10,R30
00024d 87fb      	STD  Y+10+1,R31
00024e 85ab      	LDD  R26,Y+11
00024f 23aa      	TST  R26
000250 f422      	BRPL _0x2020043
000251 d11b      	RCALL __ANEGW1
000252 87ea      	STD  Y+10,R30
000253 87fb      	STD  Y+10+1,R31
000254 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000255 3040      	CPI  R20,0
000256 f011      	BREQ _0x2020044
000257 5f1f      	SUBI R17,-LOW(1)
000258 c001      	RJMP _0x2020045
                 _0x2020044:
000259 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00025a c009      	RJMP _0x2020046
                 _0x2020042:
00025b d0ed      	RCALL SUBOPT_0x3
00025c 89a8      	LDD  R26,Y+16
00025d 89b9      	LDD  R27,Y+16+1
00025e 9614      	ADIW R26,4
                +
00025f 91ed     +LD R30 , X +
000260 91fc     +LD R31 , X
000261 9711     +SBIW R26 , 1
                 	__GETW1P
000262 87ea      	STD  Y+10,R30
000263 87fb      	STD  Y+10+1,R31
                 _0x2020046:
                 _0x2020036:
000264 fd00      	SBRC R16,0
000265 c010      	RJMP _0x2020047
                 _0x2020048:
000266 1715      	CP   R17,R21
000267 f470      	BRSH _0x202004A
000268 ff07      	SBRS R16,7
000269 c008      	RJMP _0x202004B
00026a ff02      	SBRS R16,2
00026b c004      	RJMP _0x202004C
00026c 7f0b      	ANDI R16,LOW(251)
00026d 2f24      	MOV  R18,R20
00026e 5011      	SUBI R17,LOW(1)
00026f c001      	RJMP _0x202004D
                 _0x202004C:
000270 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000271 c001      	RJMP _0x202004E
                 _0x202004B:
000272 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000273 d0ce      	RCALL SUBOPT_0x2
000274 5051      	SUBI R21,LOW(1)
000275 cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000276 2f31      	MOV  R19,R17
000277 ff01      	SBRS R16,1
000278 c016      	RJMP _0x202004F
                 _0x2020050:
000279 3030      	CPI  R19,0
00027a f099      	BREQ _0x2020052
00027b ff03      	SBRS R16,3
00027c c006      	RJMP _0x2020053
00027d 81ee      	LDD  R30,Y+6
00027e 81ff      	LDD  R31,Y+6+1
00027f 9125      	LPM  R18,Z+
000280 83ee      	STD  Y+6,R30
000281 83ff      	STD  Y+6+1,R31
000282 c005      	RJMP _0x2020054
                 _0x2020053:
000283 81ae      	LDD  R26,Y+6
000284 81bf      	LDD  R27,Y+6+1
000285 912d      	LD   R18,X+
000286 83ae      	STD  Y+6,R26
000287 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000288 d0b9      	RCALL SUBOPT_0x2
000289 3050      	CPI  R21,0
00028a f009      	BREQ _0x2020055
00028b 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00028c 5031      	SUBI R19,LOW(1)
00028d cfeb      	RJMP _0x2020050
                 _0x2020052:
00028e c048      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
00028f e320      	LDI  R18,LOW(48)
000290 81ee      	LDD  R30,Y+6
000291 81ff      	LDD  R31,Y+6+1
000292 d0de      	RCALL __GETW1PF
000293 87e8      	STD  Y+8,R30
000294 87f9      	STD  Y+8+1,R31
000295 81ee      	LDD  R30,Y+6
000296 81ff      	LDD  R31,Y+6+1
000297 9632      	ADIW R30,2
000298 83ee      	STD  Y+6,R30
000299 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00029a 85e8      	LDD  R30,Y+8
00029b 85f9      	LDD  R31,Y+8+1
00029c 85aa      	LDD  R26,Y+10
00029d 85bb      	LDD  R27,Y+10+1
00029e 17ae      	CP   R26,R30
00029f 07bf      	CPC  R27,R31
0002a0 f050      	BRLO _0x202005C
0002a1 5f2f      	SUBI R18,-LOW(1)
0002a2 85a8      	LDD  R26,Y+8
0002a3 85b9      	LDD  R27,Y+8+1
0002a4 85ea      	LDD  R30,Y+10
0002a5 85fb      	LDD  R31,Y+10+1
0002a6 1bea      	SUB  R30,R26
0002a7 0bfb      	SBC  R31,R27
0002a8 87ea      	STD  Y+10,R30
0002a9 87fb      	STD  Y+10+1,R31
0002aa cfef      	RJMP _0x202005A
                 _0x202005C:
0002ab 332a      	CPI  R18,58
0002ac f028      	BRLO _0x202005D
0002ad ff03      	SBRS R16,3
0002ae c002      	RJMP _0x202005E
0002af 5f29      	SUBI R18,-LOW(7)
0002b0 c001      	RJMP _0x202005F
                 _0x202005E:
0002b1 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
0002b2 fd04      	SBRC R16,4
0002b3 c019      	RJMP _0x2020061
0002b4 3321      	CPI  R18,49
0002b5 f420      	BRSH _0x2020063
0002b6 85a8      	LDD  R26,Y+8
0002b7 85b9      	LDD  R27,Y+8+1
0002b8 9711      	SBIW R26,1
0002b9 f409      	BRNE _0x2020062
                 _0x2020063:
0002ba c009      	RJMP _0x20200CD
                 _0x2020062:
0002bb 1753      	CP   R21,R19
0002bc f010      	BRLO _0x2020067
0002bd ff00      	SBRS R16,0
0002be c001      	RJMP _0x2020068
                 _0x2020067:
0002bf c011      	RJMP _0x2020066
                 _0x2020068:
0002c0 e220      	LDI  R18,LOW(32)
0002c1 ff07      	SBRS R16,7
0002c2 c00a      	RJMP _0x2020069
0002c3 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
0002c4 6100      	ORI  R16,LOW(16)
0002c5 ff02      	SBRS R16,2
0002c6 c006      	RJMP _0x202006A
0002c7 7f0b      	ANDI R16,LOW(251)
0002c8 934a      	ST   -Y,R20
0002c9 d085      	RCALL SUBOPT_0x4
0002ca 3050      	CPI  R21,0
0002cb f009      	BREQ _0x202006B
0002cc 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002cd d074      	RCALL SUBOPT_0x2
0002ce 3050      	CPI  R21,0
0002cf f009      	BREQ _0x202006C
0002d0 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002d1 5031      	SUBI R19,LOW(1)
0002d2 85a8      	LDD  R26,Y+8
0002d3 85b9      	LDD  R27,Y+8+1
0002d4 9712      	SBIW R26,2
0002d5 f008      	BRLO _0x2020059
0002d6 cfb8      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002d7 ff00      	SBRS R16,0
0002d8 c007      	RJMP _0x202006D
                 _0x202006E:
0002d9 3050      	CPI  R21,0
0002da f029      	BREQ _0x2020070
0002db 5051      	SUBI R21,LOW(1)
0002dc e2e0      	LDI  R30,LOW(32)
0002dd 93ea      	ST   -Y,R30
0002de d070      	RCALL SUBOPT_0x4
0002df cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002e0 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002e1 ceea      	RJMP _0x2020016
                 _0x2020018:
0002e2 85ac      	LDD  R26,Y+12
0002e3 85bd      	LDD  R27,Y+12+1
0002e4 91ed      	LD   R30,X+
0002e5 91fd      	LD   R31,X+
0002e6 d07f      	RCALL __LOADLOCR6
0002e7 9664      	ADIW R28,20
0002e8 9508      	RET
                 ; .FEND
                 _put_lcd_G101:
                 ; .FSTART _put_lcd_G101
0002e9 d077      	RCALL __SAVELOCR4
0002ea 018d      	MOVW R16,R26
0002eb 813c      	LDD  R19,Y+4
0002ec 2fa3      	MOV  R26,R19
0002ed de82      	RCALL _lcd_putchar
0002ee 01d8      	MOVW R26,R16
0002ef 91ed      	LD   R30,X+
0002f0 91fd      	LD   R31,X+
0002f1 9631      	ADIW R30,1
0002f2 93fe      	ST   -X,R31
0002f3 93ee      	ST   -X,R30
0002f4 d073      	RCALL __LOADLOCR4
0002f5 9625      	ADIW R28,5
0002f6 9508      	RET
                 ; .FEND
                 _lcd_printf:
                 ; .FSTART _lcd_printf
0002f7 92ff      	PUSH R15
0002f8 2ef8      	MOV  R15,R24
0002f9 9726      	SBIW R28,6
0002fa 931a      	ST   -Y,R17
0002fb 930a      	ST   -Y,R16
0002fc 01de      	MOVW R26,R28
0002fd 9614      	ADIW R26,4
                +
0002fe 2400     +CLR R0
0002ff 0daf     +ADD R26 , R15
000300 1db0     +ADC R27 , R0
                 	__ADDW2R15
000301 018d      	MOVW R16,R26
000302 e0e0      	LDI  R30,LOW(0)
000303 83ec      	STD  Y+4,R30
000304 83ed      	STD  Y+4+1,R30
000305 83ee      	STD  Y+6,R30
000306 83ef      	STD  Y+6+1,R30
000307 01de      	MOVW R26,R28
000308 9618      	ADIW R26,8
                +
000309 2400     +CLR R0
00030a 0daf     +ADD R26 , R15
00030b 1db0     +ADC R27 , R0
                 	__ADDW2R15
00030c 91ed      	LD   R30,X+
00030d 91fd      	LD   R31,X+
00030e 93fa      	ST   -Y,R31
00030f 93ea      	ST   -Y,R30
000310 931a      	ST   -Y,R17
000311 930a      	ST   -Y,R16
000312 eee9      	LDI  R30,LOW(_put_lcd_G101)
000313 e0f2      	LDI  R31,HIGH(_put_lcd_G101)
000314 93fa      	ST   -Y,R31
000315 93ea      	ST   -Y,R30
000316 01de      	MOVW R26,R28
000317 9618      	ADIW R26,8
000318 dea8      	RCALL __print_G101
000319 8119      	LDD  R17,Y+1
00031a 8108      	LDD  R16,Y+0
00031b 9628      	ADIW R28,8
00031c 90ff      	POP  R15
00031d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00031e 93ba      	ST   -Y,R27
00031f 93aa      	ST   -Y,R26
000320 91a9          ld   r26,y+
000321 91b9          ld   r27,y+
000322 27ee          clr  r30
000323 27ff          clr  r31
                 strlen0:
000324 916d          ld   r22,x+
000325 2366          tst  r22
000326 f011          breq strlen1
000327 9631          adiw r30,1
000328 cffb          rjmp strlen0
                 strlen1:
000329 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00032a 93ba      	ST   -Y,R27
00032b 93aa      	ST   -Y,R26
00032c 27aa          clr  r26
00032d 27bb          clr  r27
00032e 91e9          ld   r30,y+
00032f 91f9          ld   r31,y+
                 strlenf0:
000330 9005      	lpm  r0,z+
000331 2000          tst  r0
000332 f011          breq strlenf1
000333 9611          adiw r26,1
000334 cffb          rjmp strlenf0
                 strlenf1:
000335 01fd          movw r30,r26
000336 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000167           	.BYTE 0x4
                 __lcd_maxx:
00016b           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000337 de0f      	RCALL __lcd_write_data
000338 e0a3      	LDI  R26,LOW(3)
000339 e0b0      	LDI  R27,0
00033a c03f      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x1:
00033b e3a0      	LDI  R26,LOW(48)
00033c ddf5      	RCALL __lcd_write_nibble_G100
                +
00033d ec88     +LDI R24 , LOW ( 200 )
00033e e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00033f 9701     +SBIW R24 , 1
000340 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000341 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2:
000342 932a      	ST   -Y,R18
000343 85ad      	LDD  R26,Y+13
000344 85be      	LDD  R27,Y+13+1
000345 85ef      	LDD  R30,Y+15
000346 89f8      	LDD  R31,Y+15+1
000347 9509      	ICALL
000348 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x3:
000349 89e8      	LDD  R30,Y+16
00034a 89f9      	LDD  R31,Y+16+1
00034b 9734      	SBIW R30,4
00034c 8be8      	STD  Y+16,R30
00034d 8bf9      	STD  Y+16+1,R31
00034e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
00034f 85ad      	LDD  R26,Y+13
000350 85be      	LDD  R27,Y+13+1
000351 85ef      	LDD  R30,Y+15
000352 89f8      	LDD  R31,Y+15+1
000353 9509      	ICALL
000354 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
000355 89a8      	LDD  R26,Y+16
000356 89b9      	LDD  R27,Y+16+1
000357 9614      	ADIW R26,4
000358 91ed      	LD   R30,X+
000359 91fd      	LD   R31,X+
00035a 83ee      	STD  Y+6,R30
00035b 83ff      	STD  Y+6+1,R31
00035c 81ae      	LDD  R26,Y+6
00035d 81bf      	LDD  R27,Y+6+1
00035e 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00035f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000360 934a      	ST   -Y,R20
                 __SAVELOCR4:
000361 933a      	ST   -Y,R19
                 __SAVELOCR3:
000362 932a      	ST   -Y,R18
                 __SAVELOCR2:
000363 931a      	ST   -Y,R17
000364 930a      	ST   -Y,R16
000365 9508      	RET
                 
                 __LOADLOCR6:
000366 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000367 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000368 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000369 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00036a 8119      	LDD  R17,Y+1
00036b 8108      	LD   R16,Y
00036c 9508      	RET
                 
                 __ANEGW1:
00036d 95f1      	NEG  R31
00036e 95e1      	NEG  R30
00036f 40f0      	SBCI R31,0
000370 9508      	RET
                 
                 __GETW1PF:
000371 9005      	LPM  R0,Z+
000372 91f4      	LPM  R31,Z
000373 2de0      	MOV  R30,R0
000374 9508      	RET
                 
                 __PUTPARD1:
000375 937a      	ST   -Y,R23
000376 936a      	ST   -Y,R22
000377 93fa      	ST   -Y,R31
000378 93ea      	ST   -Y,R30
000379 9508      	RET
                 
                 _delay_ms:
00037a 9610      	adiw r26,0
00037b f039      	breq __delay_ms1
                 __delay_ms0:
00037c 95a8      	wdr
                +
00037d ed80     +LDI R24 , LOW ( 0x7D0 )
00037e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00037f 9701     +SBIW R24 , 1
000380 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000381 9711      	sbiw r26,1
000382 f7c9      	brne __delay_ms0
                 __delay_ms1:
000383 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  13 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   2 r6 :   3 r7 :   1 
r8 :  12 r9 :   4 r10:   3 r11:   2 r12:   4 r13:   4 r14:   0 r15:   5 
r16:  42 r17:  44 r18:  30 r19:  11 r20:   9 r21:  17 r22:  11 r23:   2 
r24:  23 r25:   5 r26:  83 r27:  30 r28:  13 r29:   1 r30: 188 r31:  65 
x  :  22 y  : 136 z  :  14 
Registers used: 32 out of 35 (91.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   5 
adiw  :  23 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   0 brne  :  45 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   8 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  19 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :  10 cpc   :   7 cpi   :  44 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   5 inc   :   2 jmp   :  22 ld    :  25 ldd   :  59 ldi   : 109 
lds   :   1 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  34 movw  :  23 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  10 pop   :   1 push  :   1 rcall :  58 ret   :  33 
reti  :   0 rjmp  :  79 rol   :   0 ror   :   0 sbc   :   2 sbci  :   3 
sbi   :  11 sbic  :   0 sbis  :  12 sbiw  :  14 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  46 std   :  30 sts   :   3 sub   :   1 subi  :  17 swap  :   1 
tst   :   3 wdr   :   1 
Instructions used: 52 out of 116 (44.8%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000708   1742     58   1800   16384  11.0%
[.dseg] 0x000060 0x00016c      0     12     12    1024   1.2%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 10 warnings
